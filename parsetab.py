
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'LP RP COMMA ID CASEcase : CASE patternpattern : ID LP plist RP\n               | ID plist : plist COMMA pattern\n          | patternempty :'
    
_lr_action_items = {'CASE':([0,],[2,]),'$end':([1,3,4,8,],[0,-1,-3,-2,]),'ID':([2,5,9,],[4,4,4,]),'LP':([4,],[5,]),'RP':([4,6,7,8,10,],[-3,8,-5,-2,-4,]),'COMMA':([4,6,7,8,10,],[-3,9,-5,-2,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'case':([0,],[1,]),'pattern':([2,5,9,],[3,7,10,]),'plist':([5,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> case","S'",1,None,None,None),
  ('case -> CASE pattern','case',2,'p_case','pcase.py',64),
  ('pattern -> ID LP plist RP','pattern',4,'p_pattern','pcase.py',68),
  ('pattern -> ID','pattern',1,'p_pattern','pcase.py',69),
  ('plist -> plist COMMA pattern','plist',3,'p_plist','pcase.py',78),
  ('plist -> pattern','plist',1,'p_plist','pcase.py',79),
  ('empty -> <empty>','empty',0,'p_empty','pcase.py',94),
]
